%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.4 (Build 12E55) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2552 2548
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2552 2548
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9496 1.0000 1.0890 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4194 0.2144 0.0081 0.3502 0.7244 0.0935 0.1799 0.0612 0.9873 ] def 
/RangeLMN [ 0.0 0.9496 0.0 1.0000 0.0 1.0890 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.23529412 0.61960787 0.87450981 sc
q
1198.7012 1.353 m
734.65582 30.426241 328.06223 303.4433 125.5026 721.97803 c
19.090994 941.84882 -20.941315 1190.5743 10.347798 1437.4473 c
30.768763 1598.5707 84.87133 1760.7633 165.41075 1902.3075 c
253.06215 2056.3508 371.58713 2189.9585 516.20844 2297.7456 c
773.60553 2489.585 1098.2368 2576.4634 1420.5393 2539.7639 c
1460.9358 2535.1641 1531.771 2523.4121 1537.246 2520.4016 c
1539.684 2519.061 1535.6591 2517.2964 1525.5575 2515.2771 c
1491.9326 2508.5554 1424.7638 2490.5046 1383.0125 2476.97 c
1239.5117 2430.4507 1106.563 2361.8169 989.36658 2273.7534 c
959.66278 2251.4336 959.34412 2251.2756 932.22321 2245.4321 c
756.09143 2207.4832 589.93109 2127.6887 451.70108 2014.6736 c
397.95996 1970.7355 327.56592 1897.3623 284.64914 1840.5519 c
263.64746 1812.7513 229.06198 1761.8607 226.40352 1754.847 c
225.47311 1752.3923 238.67323 1763.4022 255.7373 1779.3135 c
408.86026 1922.0917 570.84357 2020.0991 751.59259 2079.3289 c
772.96106 2086.3313 791.82043 2091.7292 793.5022 2091.3247 c
795.18402 2090.9199 787.3089 2078.9023 776.00189 2064.6191 c
749.98425 2031.7523 714.99695 1980.2678 690.94458 1939.4553 c
668.14948 1900.7761 625.85028 1814.1809 607.6261 1768.8853 c
574.7569 1687.1896 546.80682 1588.027 532.15717 1501.1327 c
527.82812 1475.4552 523.44135 1453.7349 522.40869 1452.8655 c
521.3761 1451.996 508.89551 1443.2725 494.6741 1433.4801 c
414.47617 1378.2581 330.44992 1295.4913 273.28049 1215.4052 c
238.8709 1167.2021 204.40799 1105.8303 181.85661 1052.597 c
166.54167 1016.4456 152.7 977.33685 153.58806 972.72607 c
154.01637 970.50262 159.36082 976.72821 165.76064 986.90582 c
226.82585 1084.0164 314.21741 1181.4084 406.24445 1254.9092 c
437.10333 1279.5557 499.76523 1323.4537 509.3215 1327.1202 c
512.78406 1328.4486 513.46765 1319.9279 514.78351 1259.037 c
518.5155 1086.3364 553.02832 931.15906 622.17999 776.15753 c
633.92548 749.83051 l
617.15533 725.51636 l
572.82965 661.25061 536.82996 585.24115 515.62512 511.14639 c
500.99298 460.01807 501.64511 459.29547 524.57019 501.23438 c
547.56787 543.30603 563.54785 569.21936 587.82861 603.81525 c
613.12274 639.85492 660.44189 697.31702 662.67883 694.70972 c
663.2915 693.99554 669.43207 683.47772 676.32446 671.33685 c
754.67194 533.32831 874.95532 402.21567 1008.2433 309.53485 c
1040.3594 287.20325 1098.1609 250.97173 1102.0197 250.75336 c
1103.2639 250.68298 1086.8212 268.56598 1065.4802 290.49338 c
995.88947 361.99628 945.77454 423.4238 894.60895 499.93588 c
840.28217 581.17517 798.94769 658.55493 765.77594 741.11615 c
750.66638 778.72235 l
765.47009 790.33252 l
807.85138 823.57117 879.78436 865.80029 932.22321 888.22693 c
971.21216 904.90143 1053.3315 931.03528 1066.738 931.03528 c
1068.0599 931.03528 1069.947 920.22534 1070.9318 907.01318 c
1082.6155 750.23651 1143.8325 582.40399 1236.9377 451.89166 c
1265.1288 412.37418 1328.674 338.54929 1324.1172 350.60925 c
1323.5774 352.0376 1311.3615 376.5791 1296.9707 405.14594 c
1238.229 521.75214 1201.6561 638.88849 1185.4796 762.23132 c
1179.8221 805.36877 1175.2278 899.94385 1177.5 926.4906 c
1179.4451 949.21417 l
1232.1838 949.21417 l
1326.7487 949.21417 1396.6139 938.23181 1482.8776 909.8067 c
1513.349 899.76593 1572.6342 875.65674 1577.1047 871.48785 c
1578.215 870.45251 1575.6926 856.25623 1571.4996 839.94049 c
1540.5221 719.40216 1540.3811 592.72876 1571.0909 472.90961 c
1576.6165 451.35135 1584.8137 423.7793 1589.3073 411.6384 c
1600.6368 381.02737 1621.0992 333.42123 1622.3777 334.69952 c
1622.9596 335.28131 1621.1063 347.86383 1618.2592 362.66068 c
1591.501 501.72644 1600.8345 652.17542 1643.8921 775.84387 c
1657.9036 816.08673 1660.3138 821.96198 1662.8119 821.96198 c
1666.3743 821.96198 1693.959 802.4928 1721.6683 780.42145 c
1866.8452 664.78351 1965.8124 498.19675 2004.7858 303.86353 c
2009.0825 282.43842 2013.3635 258.31369 2014.2991 250.25308 c
2016 235.59743 l
1978.6616 210.92572 l
1800.2603 93.045242 1601.9733 23.8486 1385.4741 3.9198599 c
1344.3441 0.13372 1240.8616 -1.2884001 1198.7012 1.353 c
1198.7012 1.353 l
1198.7012 1.353 l
h
2038.2688 279.29697 m
2040.2397 307.60007 2036.3973 374.26331 2030.5587 413.06418 c
2006.3842 573.71637 1930.5062 723.53015 1814.8385 838.98315 c
1791.7739 862.00482 1759.3964 889.82776 1722.5273 918.30865 c
1714 924.89594 l
1732.6207 952.59814 l
1771.2028 1009.9968 1825.7993 1070.4077 1878.33 1113.8248 c
1902.7401 1134 l
1922.5197 1112.5923 l
2097.4329 923.2807 2193.6628 696.76874 2210.252 435.30978 c
2212 407.75739 l
2179.8254 375.56949 l
2134.7144 330.43945 2045.8013 254 2038.4181 254 c
2037.3671 254 2037.2999 265.38364 2038.2689 279.29697 c
2038.2688 279.29697 l
2038.2688 279.29697 l
h
2233.5425 439.93997 m
2244.2102 506.1713 2248.0291 595.84778 2242.8152 657.69727 c
2227.2527 842.31323 2158.1123 1016.7507 2038.2775 1173.7346 c
2014 1205.5382 l
2042.8956 1220.0321 l
2110.3582 1253.8713 2185.6553 1279.2531 2261.6829 1293.7825 c
2277.1641 1296.741 2290.7922 1298.5671 2291.9678 1297.8406 c
2295.3037 1295.7784 2322.2532 1211.948 2333.6125 1168.2979 c
2377.3796 1000.1183 2390.051 828.4151 2372.1553 646.03088 c
2369.1326 615.22437 l
2349.7957 584.97107 l
2319.3516 537.34015 2269.2808 470.47617 2241.5291 440.39316 c
2231.9414 430 l
2233.5425 439.93997 l
2233.5425 439.93997 l
h
2412.0042 696.30219 m
2411.8794 697.97131 2414.6143 712.56152 2418.0818 728.72479 c
2458.1831 915.65955 2457.2856 1107.1489 2415.397 1301.5155 c
2413.9993 1308 l
2440.6458 1307.2742 l
2466.8992 1306.5591 2533.6917 1300.0974 2545.7952 1297.1019 c
2552 1295.5662 l
2550.2661 1241.3633 l
2545.2383 1084.1866 2516.9153 944.12286 2461.8704 804.22583 c
2444.9771 761.29144 2412.4141 690.81622 2412.0042 696.30219 c
2412.0042 696.30219 l
2412.0042 696.30219 l
h
723.77643 861.83441 m
685.51593 998.51495 668.92194 1136.8534 675.34973 1265.5504 c
678.36243 1325.8712 687.47577 1411.0836 691.28534 1414.5533 c
693.71429 1416.7656 767.40387 1439.6533 792.28088 1445.9221 c
900.90332 1473.2943 1012.7068 1484.3202 1122.4312 1478.4811 c
1154.578 1476.7703 1181.365 1474.8867 1181.9576 1474.2954 c
1182.5503 1473.7042 1176.8501 1460.077 1169.2905 1444.0129 c
1140.5513 1382.942 1118.4734 1321.8679 1101.7107 1257.0669 c
1084.2659 1189.6292 1076.8619 1144.4562 1069.105 1058.1326 c
1067.579 1041.1512 l
1035.8912 1031.3817 l
928.84308 998.37836 828.36841 942.68811 745.00287 870.15045 c
736.05835 862.36774 727.99072 856 727.07477 856 c
726.15887 856 724.67456 858.62549 723.77631 861.83441 c
723.77643 861.83441 l
723.77643 861.83441 l
h
1599.04 990.97089 m
1552.9305 1014.6228 1477.8167 1039.4091 1415.2423 1051.6207 c
1357.7727 1062.8363 1325.6237 1065.7194 1257.545 1065.7626 c
1209.2703 1065.7932 1192 1066.6035 1192 1068.8378 c
1192 1075.4624 1205.5531 1137.8315 1213.0602 1165.7537 c
1223.2897 1203.8009 1246.1986 1270.4111 1261.1854 1305.683 c
1284.1727 1359.7838 1329.1318 1445.0911 1336.0565 1447.7462 c
1344.4608 1450.9688 1436.7897 1422.896 1500.2987 1397.8082 c
1599.5691 1358.5936 1690.4735 1308.0767 1774.1061 1245.6493 c
1802 1224.828 l
1770.0261 1192.0601 l
1715.7926 1136.4797 1673.0458 1078.4912 1638.4846 1013.6165 c
1629.2046 996.19678 1620.4436 981.96936 1619.0159 982.00006 c
1617.5881 982.03064 1608.599 986.06763 1599.04 990.97089 c
1599.04 990.97089 l
1599.04 990.97089 l
h
1900.3513 1323.3223 m
1855.0792 1365.1252 1764.9885 1429.7198 1701.459 1465.927 c
1634.8844 1503.8698 1553.1324 1539.288 1473.9679 1564.4852 c
1450.3738 1571.995 1430.621 1578.4939 1430.0726 1578.927 c
1427.8779 1580.661 1475.8578 1632.8368 1514.6772 1670.9304 c
1582.7454 1737.7261 1640.3896 1782.4956 1723.5581 1833.1582 c
1753.855 1851.6136 1837.0133 1894.037 1842.8204 1894 c
1852.5781 1893.9376 1935.6614 1824.4241 1987.4479 1772.9937 c
2082.511 1678.5845 2159.0759 1575.4325 2223.8728 1454.4705 c
2232.1399 1439.0377 2238.4839 1426.0359 2237.9709 1425.5774 c
2237.458 1425.119 2225.3386 1422.7928 2211.0393 1420.4082 c
2119.6714 1405.1711 2025.0935 1370.6823 1939.0944 1321.24 c
1928.2292 1314.9935 1918.2845 1309.9358 1916.9951 1310.0006 c
1915.7057 1310.0656 1908.2159 1316.0602 1900.3513 1323.3223 c
1900.3513 1323.3223 l
1900.3513 1323.3223 l
h
2537.1362 1407.6591 m
2534.5735 1410.2255 2456.8499 1424.5277 2431.0059 1427.1886 c
2416.01 1428.7325 2397.7615 1430.6158 2390.4536 1431.3738 c
2377.1667 1432.7518 l
2367.4443 1459.264 l
2317.4858 1595.4978 2244.1782 1722.4888 2150.9744 1834.2552 c
2140.2395 1847.1282 2108.8572 1880.3604 2081.2358 1908.1045 c
2053.6147 1935.8488 2031.463 1958.9966 2032.0099 1959.5443 c
2033.9967 1961.5341 2098.4924 1973.3136 2128.6863 1977.2012 c
2193.2529 1985.5146 2266.9949 1988.2201 2316.7058 1984.0995 c
2336.135 1982.4889 l
2354.9592 1952.609 l
2443.1643 1812.6 2504.783 1650.6276 2532.0603 1487.0764 c
2543.6558 1417.552 2544.7771 1400.0065 2537.1362 1407.6591 c
2537.1362 1407.6591 l
2537.1362 1407.6591 l
h
722.80896 1564.0958 m
723.82666 1568.7324 730.35327 1589.8082 737.3125 1610.9309 c
798.69196 1797.2299 907.13861 1974.4095 1040.8645 2106.873 c
1072.2881 2138 l
1131.339 2137.5906 l
1274.8756 2136.5955 1416.954 2108.9226 1555.4706 2054.9817 c
1597.1667 2038.7445 1652.314 2013.7074 1682.3536 1997.3762 c
1704 1985.608 l
1669.6139 1967.6144 l
1529.2419 1894.1599 1407.387 1793.5886 1307.3904 1668.6584 c
1293.7566 1651.6252 1278.8088 1632.1058 1274.1731 1625.2821 c
1266.6439 1614.1991 1264.9127 1613.0123 1257.9492 1614.1597 c
1211.7716 1621.7688 1090.4357 1625.2765 1030.5858 1620.7325 c
976.05902 1616.5929 923.48645 1609.0891 872.13928 1598.1173 c
831.57874 1589.4503 755.67523 1568.0707 735.31287 1559.5775 c
722.00488 1554.0269 720.70227 1554.4976 722.80896 1564.0958 c
722.80896 1564.0958 l
722.80896 1564.0958 l
h
1876.4513 2073.2129 m
1696.2933 2187.3855 1473.7844 2260.531 1274.0208 2271.25 c
1248.9299 2272.5964 1243.9103 2273.5112 1246.6818 2276.2322 c
1263.4775 2292.7224 1405.4895 2366.6084 1465.5796 2390.1206 c
1538.1753 2418.5259 1621.0911 2442.5095 1697.7736 2457.283 c
1732.6395 2464 l
1754.9945 2455.071 l
1893.3479 2399.8101 2033.3851 2310.167 2144.7346 2205.5837 c
2189.6343 2163.4124 2258.8079 2089.6814 2255.9119 2087.0815 c
2255.3508 2086.5776 2244.3762 2087.105 2231.5239 2088.2544 c
2147.9226 2095.7275 2030.3763 2086.9561 1937.8887 2066.3428 c
1900.4562 2058 l
1876.4513 2073.2129 l
1876.4513 2073.2129 l
h
1876.4513 2073.2129 m
W*
0 0 2552 2548 rc
-10 2558 m
2562 2558 l
2562 -9.9999981 l
-10 -9.9999981 l
h
-10 2558 m
f*
ep
end
%%Trailer
%%EOF
